#!/usr/bin/env node

const express = require('express')
const bodyParser = require('body-parser')
const fileUpload = require('express-fileupload')
const Avast = require('../src/Avast')

const app = express()

const PORT = process.env.AVAST_SERVER_PORT || 4311
const REQ_SIZE_LIMIT = process.env.AVAST_SERVER_REQ_SIZE_LIMIT || '50mb'
const MAX_TIMEOUT = process.env.AVAST_SERVER_MAX_TIMEOUT ? parseInt(process.env.AVAST_SERVER_MAX_TIMEOUT, 10) : 30000
const SOCK_FILE = process.env.AVAST_SERVER_SOCK_FILE || '/var/run/avast/scan.sock'

const avast = new Avast(SOCK_FILE, MAX_TIMEOUT)

app.use(bodyParser.json({limit: REQ_SIZE_LIMIT}))
app.use(fileUpload({
  useTempFiles: true,
  tempFileDir: '/tmp/'
}))

avast.connect()

process.on('SIGTERM', () => {
  setTimeout(() => {
    process.exit(143) // 128 + SIGTERM see http://people.cs.pitt.edu/~alanjawi/cs449/code/shell/UnixSignals.htm
  }, 1000)
})

process.on('SIGINT', () => {
  setTimeout(() => {
    process.exit(130) // 128 + SIGINT see http://people.cs.pitt.edu/~alanjawi/cs449/code/shell/UnixSignals.htm
  }, 1000)
})

app.get('/info', async (req, res) => {
  const info = await avast.getInfo()

  console.log('Info request result', info)

  return res.json(info)
})

app.post('/scan', async (req, res) => {
  if (!req.files || !req.files.file) {
    console.log('Request failed due to missing file')
    return res.status(400).json({ error: 'Missing file' })
  }

  const file = req.files.file

  try {
    const result = await avast.scanFile(file.tempFilePath)
    console.log(`File scan result: `, { name: file.name, size: file.size, tmpPath: file.tempFilePath, result })

    return res.json(result)
  } catch (err) {
    console.error(err)
    return res.sendStatus(500)
  }

})

app.listen(PORT, () => {
  console.log(`Avast Scan Web Server listening at port ${PORT}`)
})
